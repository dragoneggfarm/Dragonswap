{"version":3,"sources":["utils/lotteryUtils.js","views/Lottery/components/Hero.tsx","views/Lottery/Lottery.tsx"],"names":["multiCall","abi","calls","a","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","length","i","newCalls","slice","calldata","map","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","lotteryContract","price","numbersList","account","BigNumber","times","pow","toString","send","from","on","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","Title","styled","Heading","attrs","as","size","theme","colors","secondary","StyledHero","Text","div","StyledContainer","Container","mediaQueries","sm","Hero","lg","TranslateString","useI18n","Lottery","useLottery","useWallet","useState","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","useEffect","fetch","then","response","json","data","catch","previousLotteryNumber","getInitialLotteryIndex","Page"],"mappings":"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","file":"static/js/15.cb683d3c.chunk.js","sourcesContent":["/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIdex) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIdex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIdex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\n    return amount / 1e18 / LOTTERY_TICKET_PRICE\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n      <Title>{TranslateString(708, 'Coming Soon')}</Title>\n        {/* <LeftWrapper>\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper> */}\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        {/* <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}